buildscript {    // Configuration for building
	repositories {
		jcenter()    // Bintray's repository - a fast Maven Central mirror & more
		mavenCentral()
	}
	dependencies {
		classpath 'com.google.cloud.tools:appengine-gradle-plugin:2.2.0' // If a newer version is available, use it
	}
}


plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'war'
}

apply plugin: "com.google.cloud.tools.appengine"

group = 'io.clinix'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {   // repositories for Jar's you access in your code
	maven {
		url 'https://oss.sonatype.org/content/repositories/snapshots' // SNAPSHOT repository (if needed)
	}
	mavenCentral()
	jcenter()
}

ext {
	set('springCloudVersion', "Hoxton.SR5")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-gcp-starter'
	implementation 'org.springframework.cloud:spring-cloud-gcp-starter-sql-mysql'
	compile 'com.google.appengine:appengine-api-1.0-sdk:+'  // Latest App Engine Api's
	providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
	compile 'jstl:jstl:1.2'

	compileOnly 'org.projectlombok:lombok:1.18.12'
	annotationProcessor 'org.projectlombok:lombok:1.18.12'

	testCompileOnly 'org.projectlombok:lombok:1.18.12'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'

	runtimeOnly 'mysql:mysql-connector-java'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

appengine {  // App Engine tasks configuration
	deploy {   // deploy configuration
		stopPreviousVersion = true  // default - stop the current version
		promote = true              // default - & make this the current version
		projectId = 'GCLOUD_CONFIG' // delegate to project in gcloud config
		version = 'GCLOUD_CONFIG'   // delegate to gcloud to generate a version
	}
}
test {
	useJUnitPlatform()
}
